export default async function handler(req, res) {
    if (req.method !== 'POST') {
        console.log('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –∑–∞–ø—Ä–æ—Å–∞:', req.method);
        return res.status(405).json({ success: false, message: '–ú–µ—Ç–æ–¥ –Ω–µ —Ä–∞–∑—Ä–µ—à–µ–Ω' });
    }

    const { name, phone, device, model, problem, district, time } = req.body;
    console.log('–ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã:', { name, phone, device, model, problem, district, time });

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram
    const botToken = "7803594149:AAEQCYuCXLxtTBli0haikuhfehWJvzHcfLI";
    const chatId = "-1002674869783";

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è Telegram
    let message = "üìù –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞:\n\n";
    message += `üë§ –ò–º—è: ${name}\n`;
    message += `üì± –¢–µ–ª–µ—Ñ–æ–Ω: ${phone}\n`;
    if (device) message += `üîß –¢–∏–ø —Ç–µ—Ö–Ω–∏–∫–∏: ${device}\n`;
    if (model) message += `üì¶ –ú–æ–¥–µ–ª—å —Ç–µ—Ö–Ω–∏–∫–∏: ${model}\n`;
    if (problem) message += `‚ö†Ô∏è –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã: ${problem}\n`;
    if (district) message += `üìç –†–∞–π–æ–Ω: ${district}\n`;
    if (time) message += `‚è∞ –í—Ä–µ–º—è —Ä–µ–º–æ–Ω—Ç–∞: ${time}\n`;

    console.log('–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram:', message);

    try {
        const response = await fetch(`https://api.telegram.org/bot${botToken}/sendMessage`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                chat_id: chatId,
                text: message,
                parse_mode: 'HTML'
            })
        });

        const data = await response.json();
        console.log('–û—Ç–≤–µ—Ç –æ—Ç Telegram API:', data);

        // –í—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Å–ø–µ—Ö, —Ç–∞–∫ –∫–∞–∫ —Ñ–æ—Ä–º–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞
        return res.status(200).json({ 
            success: true, 
            message: '–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞',
            telegramResponse: data
        });
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram:', error);
        // –î–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ Telegram —Å—á–∏—Ç–∞–µ–º —Ñ–æ—Ä–º—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π
        return res.status(200).json({ 
            success: true, 
            message: '–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞',
            error: error.message
        });
    }
} 